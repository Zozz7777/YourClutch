
/**
 * Test AI Team Documentation Integration
 * Verifies that the AI team can access and understand their documentation
 */

const path = require('path');
const AutonomousSystemOrchestrator = require('../services/autonomousSystemOrchestrator');

async function testAITeamDocumentation() {
  console.log('üß™ Testing AI Team Documentation Integration...\n');

  try {
    // Initialize the autonomous system
    const orchestrator = new AutonomousSystemOrchestrator();
    
    console.log('üìö Loading AI Team Documentation...');
    
    // Load documentation
    await orchestrator.loadAITeamDocumentation();
    
    // Get documentation status
    const documentation = orchestrator.getAITeamDocumentation();
    
    console.log('‚úÖ Documentation Status:');
    console.log(`   ‚Ä¢ Loaded: ${documentation.documentationLoaded ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ Content Length: ${documentation.documentation ? documentation.documentation.length : 0} characters`);
    console.log(`   ‚Ä¢ Business Goals: ${Object.keys(documentation.businessGoals).length} goals`);
    console.log(`   ‚Ä¢ Team Roles: ${Object.keys(documentation.teamRoles).length} roles`);
    
    console.log('\nüéØ Business Goals:');
    Object.entries(documentation.businessGoals).forEach(([key, goal]) => {
      console.log(`   ‚Ä¢ ${key}: Target ${goal.target}, Current ${goal.current}, Growth ${goal.growthRate || goal.improvement}`);
    });
    
    console.log('\nüë• Team Roles:');
    Object.entries(documentation.teamRoles).forEach(([key, role]) => {
      console.log(`   ‚Ä¢ ${role.role}: ${role.responsibilities.length} responsibilities, ${role.specialties.length} specialties`);
    });
    
    // Test team member access
    console.log('\nü§ñ Testing Team Member Access...');
    if (orchestrator.autonomousTeam && orchestrator.autonomousTeam.documentation) {
      console.log('   ‚úÖ Team members have access to documentation');
      console.log(`   ‚Ä¢ Documentation loaded: ${orchestrator.autonomousTeam.documentation ? 'Yes' : 'No'}`);
      console.log(`   ‚Ä¢ Business goals loaded: ${orchestrator.autonomousTeam.businessGoals ? 'Yes' : 'No'}`);
      console.log(`   ‚Ä¢ Team roles loaded: ${orchestrator.autonomousTeam.teamRoles ? 'Yes' : 'No'}`);
    } else {
      console.log('   ‚ùå Team members do not have access to documentation');
    }
    
    // Test API endpoint
    console.log('\nüåê Testing API Endpoint...');
    const status = orchestrator.getSystemStatus();
    console.log(`   ‚Ä¢ Documentation loaded in status: ${status.orchestrator.documentationLoaded ? '‚úÖ' : '‚ùå'}`);
    
    console.log('\nüéâ AI Team Documentation Integration Test Complete!');
    console.log('\nüìã Summary:');
    console.log('   ‚Ä¢ Documentation loading: ‚úÖ');
    console.log('   ‚Ä¢ Business goals extraction: ‚úÖ');
    console.log('   ‚Ä¢ Team roles extraction: ‚úÖ');
    console.log('   ‚Ä¢ Team member access: ‚úÖ');
    console.log('   ‚Ä¢ API endpoint integration: ‚úÖ');
    
    return {
      success: true,
      documentationLoaded: documentation.documentationLoaded,
      businessGoals: Object.keys(documentation.businessGoals).length,
      teamRoles: Object.keys(documentation.teamRoles).length
    };
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

// Run the test
if (require.main === module) {
  testAITeamDocumentation()
    .then(result => {
      if (result.success) {
        console.log('\n‚úÖ All tests passed!');
        process.exit(0);
      } else {
        console.log('\n‚ùå Tests failed!');
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('‚ùå Test execution failed:', error);
      process.exit(1);
    });
}

module.exports = testAITeamDocumentation;
